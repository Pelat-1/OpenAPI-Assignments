openapi: 3.0.2
paths:
  beers:
    get:
      operationId: getBeerListV1
      summary: Get Beer list
      description: Get a page of **Beer**s in the system
      tags:
        - beers
      parameters:
        - $ref: './Components.yaml#/components/parameters/pageNumber'
        - $ref: './Components.yaml#/components/parameters/pageSize'
      responses:
        200:
          $ref: './Components.yaml#/components/responses/getBeerList200'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed401'
        404:
          $ref: './Components.yaml#/components/responses/emptyList404'
    post:
      operationId: newBeerV1
      summary: New Beer
      description: Create a new **Beer**
      tags:
        - beers
      requestBody:
        $ref: "./Components.yaml#/components/requestBodies/newBeer"
      responses:
        201:
          $ref: './Components.yaml#/components/responses/createBeer201'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed401'
  beersBeerId:
    get:
      operationId: getBeerByIdV1
      summary: Get Beer by ID
      description: Retrieve a single **Beer** in the system
      tags:
        - beers
      parameters:
        - $ref: './Components.yaml#/components/parameters/beerId'
      responses:
        200:
          $ref: './Components.yaml#/components/responses/getBeer200'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed401'
        404:
          $ref: './Components.yaml#/components/responses/beerNotFound404'
    put:
      operationId: updateBeerV1
      summary: Update Beer by ID
      description: Update **Beer** by ID
      tags:
        - beers
      parameters:
        - $ref: './Components.yaml#/components/parameters/beerId'
      requestBody:
        $ref: "./Components.yaml#/components/requestBodies/newBeer"
      responses:
        204:
          $ref: './Components.yaml#/components/responses/updateBeer204'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed401'
        404:
          $ref: './Components.yaml#/components/responses/beerNotFound404'
  customers:
    get:
      operationId: getCustomerListV1
      summary: Get Customer list
      description: Get a page of **Customer**s in the system
      tags:
        - customers
      parameters:
        - $ref: './Components.yaml#/components/parameters/pageNumber'
        - $ref: './Components.yaml#/components/parameters/pageSize'
      responses:
        200:
          $ref: './Components.yaml#/components/responses/getCustomerList200'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed401'
        404:
          $ref: './Components.yaml#/components/responses/emptyList404'
    post:
      operationId: newCustomerV1
      summary: New Customer
      description: Create a new **Customer**
      tags:
        - customers
      requestBody:
        $ref: "./Components.yaml#/components/requestBodies/newCustomer"
      responses:
        201:
          $ref: './Components.yaml#/components/responses/createCustomer201'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed401'
  customersCustomerId:
    get:
      operationId: getCustomerByIdV1
      summary: Get Customer by ID
      description: Retrieve a single **Customer** in the system
      tags:
        - customers
      parameters:
        - $ref: './Components.yaml#/components/parameters/customerId'
      responses:
        200:
          $ref: './Components.yaml#/components/responses/getCustomer200'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed401'
        404:
          $ref: './Components.yaml#/components/responses/customerNotFound404'
    put:
      operationId: updateCustomerV1
      summary: Update Customer by ID
      description: Update **Customer** by ID
      tags:
        - customers
      parameters:
        - $ref: './Components.yaml#/components/parameters/customerId'
      requestBody:
        $ref: "./Components.yaml#/components/requestBodies/newCustomer"
      responses:
        204:
          $ref: './Components.yaml#/components/responses/updateCustomer204'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed401'
        404:
          $ref: './Components.yaml#/components/responses/customerNotFound404'
    delete:
      operationId: deleteCustomerV1
      summary: Delete Customer by ID
      description: Delete **Customer** by ID
      tags:
        - customers
      parameters:
        - $ref: './Components.yaml#/components/parameters/customerId'
      responses:
        200:
          $ref: './Components.yaml#/components/responses/deleteCustomer200'
        400:
          $ref: './Components.yaml#/components/responses/idMissingWrongFormat400'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed401'
        404:
          $ref: './Components.yaml#/components/responses/customerNotFound404'