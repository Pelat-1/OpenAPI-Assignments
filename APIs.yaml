openapi: 3.0.2
paths:
  beers:
    get:
      operationId: getBeerListV1
      summary: Get Beer list
      description: Get a page of **Beer**s in the system
      tags:
        - beers
      parameters:
        - $ref: './Components.yaml#/components/parameters/pageNumber'
        - $ref: './Components.yaml#/components/parameters/pageSize'
      responses:
        200:
          $ref: './Components.yaml#/components/responses/getBeerList'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed'
        404:
          $ref: './Components.yaml#/components/responses/emptyList'
    post:
      operationId: newBeerV1
      summary: New Beer
      description: Create a new **Beer**
      tags:
        - beers
      requestBody:
        $ref: "./Components.yaml#/components/requestBodies/newBeer"
      responses:
        201:
          $ref: './Components.yaml#/components/responses/createBeer'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed'
        409:
          $ref: './Components.yaml#/components/responses/beerConflict'
  beersBeerId:
    get:
      operationId: getBeerByIdV1
      summary: Get Beer by ID
      description: Retrieve a single **Beer** in the system
      tags:
        - beers
      parameters:
        - $ref: './Components.yaml#/components/parameters/beerId'
      responses:
        200:
          $ref: './Components.yaml#/components/responses/getBeer'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed'
        404:
          $ref: './Components.yaml#/components/responses/beerNotFound'
    put:
      operationId: updateBeerV1
      summary: Update Beer by ID
      description: Update **Beer** by ID
      tags:
        - beers
      parameters:
        - $ref: './Components.yaml#/components/parameters/beerId'
      requestBody:
        $ref: "./Components.yaml#/components/requestBodies/newBeer"
      responses:
        204:
          $ref: './Components.yaml#/components/responses/updateBeer'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed'
        404:
          $ref: './Components.yaml#/components/responses/beerNotFound'
        409:
          $ref: './Components.yaml#/components/responses/beerConflict'
    delete:
      operationId: deleteBeerV1
      summary: Delete Beer by ID
      description: Delete **Beer** by ID
      tags:
        - beers
      parameters:
        - $ref: './Components.yaml#/components/parameters/beerId'
      responses:
        200:
          $ref: './Components.yaml#/components/responses/deleteBeer'
        400:
          $ref: './Components.yaml#/components/responses/idMissingWrongFormat'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed'
        404:
          $ref: './Components.yaml#/components/responses/beerNotFound'
  customers:
    get:
      operationId: getCustomerListV1
      summary: Get Customer list
      description: Get a page of **Customer**s in the system
      tags:
        - customers
      parameters:
        - $ref: './Components.yaml#/components/parameters/pageNumber'
        - $ref: './Components.yaml#/components/parameters/pageSize'
      responses:
        200:
          $ref: './Components.yaml#/components/responses/getCustomerList'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed'
        404:
          $ref: './Components.yaml#/components/responses/emptyList'
    post:
      operationId: newCustomerV1
      summary: New Customer
      description: Create a new **Customer**
      tags:
        - customers
      requestBody:
        $ref: "./Components.yaml#/components/requestBodies/newCustomer"
      responses:
        201:
          $ref: './Components.yaml#/components/responses/createCustomer'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed'
        409:
          $ref: './Components.yaml#/components/responses/customerConflict'
  customersCustomerId:
    get:
      operationId: getCustomerByIdV1
      summary: Get Customer by ID
      description: Retrieve a single **Customer** in the system
      tags:
        - customers
      parameters:
        - $ref: './Components.yaml#/components/parameters/customerId'
      responses:
        200:
          $ref: './Components.yaml#/components/responses/getCustomer'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed'
        404:
          $ref: './Components.yaml#/components/responses/customerNotFound'
    put:
      operationId: updateCustomerV1
      summary: Update Customer by ID
      description: Update **Customer** by ID
      tags:
        - customers
      parameters:
        - $ref: './Components.yaml#/components/parameters/customerId'
      requestBody:
        $ref: "./Components.yaml#/components/requestBodies/newCustomer"
      responses:
        204:
          $ref: './Components.yaml#/components/responses/updateCustomer'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed'
        404:
          $ref: './Components.yaml#/components/responses/customerNotFound'
        409:
          $ref: './Components.yaml#/components/responses/customerConflict'
    delete:
      operationId: deleteCustomerV1
      summary: Delete Customer by ID
      description: Delete **Customer** by ID
      tags:
        - customers
      parameters:
        - $ref: './Components.yaml#/components/parameters/customerId'
      responses:
        200:
          $ref: './Components.yaml#/components/responses/deleteCustomer'
        400:
          $ref: './Components.yaml#/components/responses/idMissingWrongFormat'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed'
        404:
          $ref: './Components.yaml#/components/responses/customerNotFound'
  customersCustomerIdOrders:
    post:
      operationId: customerOrderV1
      summary: Customer order by ID
      description: Customer **Order** by customerId
      tags:
        - orders
      parameters:
        - $ref: './Components.yaml#/components/parameters/customerId'
      requestBody:
        $ref: './Components.yaml#/components/requestBodies/addBeerInOrder'
      responses:
        201:
          $ref: './Components.yaml#/components/responses/orderCreated'
        204:
          $ref: './Components.yaml#/components/responses/orderUpdated'
        400:
          $ref: './Components.yaml#/components/responses/beerNotFound'
        401:
          $ref: './Components.yaml#/components/responses/userNotAllowed'
        404:
          $ref: './Components.yaml#/components/responses/orderNotFound'
      callbacks:
        orderStatusChange:
          ${request.body#/orderStatusCallbackUrl}:
            description: Webhook for order status change notifications
            post:
              requestBody:
                $ref: './Components.yaml#/components/requestBodies/beerOrderUpdated'
              respones:
                204:
                  $ref: './Components.yaml#/components/requestBodies/beerOrderCallback'